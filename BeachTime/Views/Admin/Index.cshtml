@using BeachTime.Models
@model BeachTime.Models.AdminIndexViewModel

@{
    ViewBag.Title = "Index";
}

<div class="row text-center">
    <div class="col-xs-12">
        <h2 class="text-primary">
            <b>Admin Dashboard</b>
        </h2>
        <h3 class="text-secondary">
            @Html.ValueForModel(Model.Navbar.FirstName) @Html.ValueForModel(Model.Navbar.LastName)
        </h3>

    </div>
</div>

<div class="row">

    <h3 class="text-primary">
        <b>Users</b>
    </h3>

    <div class="col-xs-12 col-md-3">
        <p class="text-secondary">
            All users of the application are displayed here.  Click one of the links to update a particular user's information.
        </p>
    </div>

    <div class="col-xs-12 col-md-9">
        <div class="centered">
            <table class="table table-condensed">
                <thead>
                    <tr>
                        <th>UserId</th>
                        <th>First Name</th>
                        <th>Last Name</th>
                        <th>Username</th>
                        <th>Email</th>
                        <th>Update User</th>
                    </tr>
                </thead>
                <tbody>
                    @{
                        foreach (AdminUserViewModel item in Model.UserViewModels)
                        {
                            <tr>
                                <td>@item.UserId</td>
                                <td>@item.FirstName</td>
                                <td>@item.LastName</td>
                                <td>@item.UserName</td>
                                <td>@item.Email</td>
                                <td>@Html.ActionLink("UPDATE", "UpdateUser", "Admin", new { id = item.UserId }, new { @class = "modal-link btn btn-warning btn-sm" })</td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<div class="row">

    <h3 class="text-primary">
        <b>Role Requests</b>
    </h3>

    <div class="col-xs-12 col-md-3">
        <p class="text-secondary">
            When a user requests permission for a new role it will be displayed here.  Click on a request to view more details and accept or deny it.
        </p>
    </div>

    <div class="col-xs-12 col-md-9">
        <div class="centered">
            <table class="table">
                <thead>

                    <tr>
                        <th>UserId</th>
                        <th>Desired Role</th>
                        <th>Accept/Deny</th>
                    </tr>
                </thead>
                <tbody>

                    @{
                        foreach (AdminRoleRequestViewModel item in Model.RequestViewModels)
                        {
                            <tr>
                                <td>@item.UserId</td>
                                <td>@item.RoleName</td>
                                <td>@Html.ActionLink("View Request", "UpdateRole", "Admin", new { id = item.RequestId }, new { @class = "modal-link btn btn-warning btn-sm" })</td>
                            </tr>
                        }
                    }
                </tbody>

            </table>
        </div>
    </div>
</div>


<div class="row">

    <h3 class="text-primary">
        <b>New User</b>
    </h3>

    <div class="col-xs-12 col-md-3">
        <p class="text-secondary">
            Create new users using this form
        </p>
    </div>

    <div class="col-xs-12 col-md-9">
        <div class="centered">

            @using (Html.BeginForm("AddNewUser", "Admin", FormMethod.Post, new {@class = "form-horizontal", role = "form"}))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.FirstName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.LastName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.LastName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.UserName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.Email, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.Email, new {htmlAttributes = new {@class = "form-control"}})
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.Email, "", new {@class = "text-danger"})
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.Password, htmlAttributes: new {@class = "control-label col-md-2"})
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NewUserViewModel.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NewUserViewModel.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NewUserViewModel.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
                            <button type="submit" class="btn btn-success">Save Changes</button>
                        </div>
                    </div>
                </div>
            }
          
        </div>
    </div>
</div>
